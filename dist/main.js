(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>m});var a=t(537),r=t.n(a),o=t(645),i=t.n(o),c=t(667),s=t.n(c),d=new URL(t(814),t.b),A=i()(r()),l=s()(d);A.push([n.id,`:root {\n    --ct-dark: darkgrey;\n    --ct-darker: black;\n    --ct-vibrant: gold;\n    --ct-light: lightgrey;\n    --ct-lighter: lightblue;\n    --ct-dark-crystal: rgba(0, 0, 0, 0.75);\n\n    --navbar-height: 3rem;\n    --footer-height: 4rem;\n    /* --navbar-height: 5rem; */\n\n    --fs-navbar: 0.9rem;\n    --fs-logo: 1.2rem;\n    --fs-headers: 1.8rem;\n    --fs-subheader: 1.4rem;\n    --fs-content: 0.9rem;\n}\n\n* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\n}\n\n.content {\n    display: grid;\n    grid-template: var(--navbar-height) 1fr var(--footer-height) / 1fr;\n    grid-template-areas:\n        "nav-bar"\n        "main-content"\n        "footer";\n}\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\nnav {\n    grid-area: nav-bar;\n    position: sticky;\n    top: 0;\n    background-color: var(--ct-darker);\n    color: var(--ct-light);\n    font-size: var(--fs-navbar);\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n}\n\nnav > .logo {\n    font-size: var(--fs-logo);\n    color: var(--ct-vibrant);\n    font-weight: bolder;\n}\n\nnav > ul {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    list-style: none;\n    font-weight: bold;\n}\n\nnav > ul > li:hover {\n    color: var(--ct-vibrant);\n    cursor: pointer;\n}\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\n.main-content {\n    grid-area: main-content;\n    background-color: var(--ct-lighter);\n    min-height: 100vh;\n    padding: 1rem;\n    background: no-repeat center\n        url(${l});\n    background-size: cover;\n    display: flex;\n    justify-content: center;\n}\n\n.content-frame {\n    width: 60%;\n    height: fit-content;\n    background-color: var(--ct-dark-crystal);\n    box-shadow: 0 0 2px 2px var(--ct-dark-crystal);\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: flex-start;\n    padding: 1rem;\n    gap: 1rem;\n    color: var(--ct-light);\n}\n\n.content-frame > h1 {\n    font-size: var(--fs-headers);\n    text-align: center;\n    font-style: italic;\n}\n\n.content-frame > p {\n    font-size: var(--fs-content);\n}\n\n.content-frame > img {\n    width: 100%;\n    border-radius: 3px;\n}\n\n\n.content-frame > video {\n    width: 100%;\n    border-radius: 3px;\n}\n\n.content-frame > .menu-item-container {\n    width: 90%;\n    padding: 1rem;\n    background-color: var(--ct-light);\n    color: var(--ct-darker);\n    border-radius: 3px;\n    box-shadow: 0 0 1px 1px var(--ct-dark);\n}\n\n.content-frame > .menu-item-container > .menu-item-name {\n    text-align: center;\n    font-size: var(--fs-subheader);\n}\n\n.content-frame > .menu-item-container > img {\n    width: 100%;\n    margin: 1rem 0;\n}\n\n.content-frame > .menu-item-container > .menu-item-desc {\n    text-align: center;\n    font-style: italic;\n    font-size: var(--fs-content);\n}\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\nfooter {\n    grid-area: footer;\n    height: 100%;\n    background-color: var(--ct-darker);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\nfooter > .githubLink {\n    font-size: var(--fs-logo);\n    font-weight: bold;\n    color: var(--ct-dark);\n    text-decoration: none;\n}\n\nfooter > .githubLink > a > img {\n    height: var(--fs-subheader);\n}\n\nfooter > .githubLink:hover {\n    color: var(--ct-vibrant);\n    cursor: pointer;\n}\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\n\n/* Extra small devices (phones, 600px and down) */\n@media only screen and (max-width: 600px) {\n    .main-content {\n        padding: 1rem 5px;\n    }\n\n    .content-frame {\n        width: 95%;\n    }\n}\n/* Small devices (portrait tablets and large phones, 600px and up) */\n@media only screen and (min-width: 600px) {\n    :root {\n        --fs-navbar: 1rem;\n        --fs-logo: 1.4rem;\n        --fs-headers: 1.9rem;\n        --fs-subheader: 1.5rem;\n        --fs-content: 1rem;\n    }\n\n    .main-content {\n        padding: 1rem 10px;\n    }\n\n    .content-frame {\n        width: 90%;\n    }\n}\n/* Medium devices (landscape tablets, 768px and up) */\n@media only screen and (min-width: 768px) {\n    :root {\n        --fs-navbar: 1.1rem;\n        --fs-logo: 1.6rem;\n        --fs-headers: 2rem;\n        --fs-subheader: 1.6rem;\n        --fs-content: 1rem;\n    }\n\n    .main-content {\n        padding: 1rem;\n    }\n    \n    .content-frame {\n        width: 80%;\n    }\n}\n/* Large devices (laptops/desktops, 992px and up) */\n@media only screen and (min-width: 992px) {  \n    .content-frame {\n        width: 70%;\n    }\n}\n/* Extra large devices (large laptops and desktops, 1200px and up) */\n@media only screen and (min-width: 1200px) {  \n    .content-frame {\n        width: 50%;\n    }\n}\n`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,mBAAmB;IACnB,kBAAkB;IAClB,kBAAkB;IAClB,qBAAqB;IACrB,uBAAuB;IACvB,sCAAsC;;IAEtC,qBAAqB;IACrB,qBAAqB;IACrB,2BAA2B;;IAE3B,mBAAmB;IACnB,iBAAiB;IACjB,oBAAoB;IACpB,sBAAsB;IACtB,oBAAoB;AACxB;;AAEA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;IACV;AACJ;;AAEA;IACI,aAAa;IACb,kEAAkE;IAClE;;;gBAGY;AAChB;AACA,uEAAuE;AACvE,uEAAuE;AACvE,uEAAuE;AACvE;IACI,kBAAkB;IAClB,gBAAgB;IAChB,MAAM;IACN,kCAAkC;IAClC,sBAAsB;IACtB,2BAA2B;IAC3B,YAAY;IACZ,WAAW;IACX,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;AACvB;;AAEA;IACI,yBAAyB;IACzB,wBAAwB;IACxB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,SAAS;IACT,gBAAgB;IAChB,iBAAiB;AACrB;;AAEA;IACI,wBAAwB;IACxB,eAAe;AACnB;AACA,uEAAuE;AACvE,uEAAuE;AACvE,uEAAuE;AACvE;IACI,uBAAuB;IACvB,mCAAmC;IACnC,iBAAiB;IACjB,aAAa;IACb;+CACuD;IACvD,sBAAsB;IACtB,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,UAAU;IACV,mBAAmB;IACnB,wCAAwC;IACxC,8CAA8C;IAC9C,aAAa;IACb,eAAe;IACf,uBAAuB;IACvB,uBAAuB;IACvB,aAAa;IACb,SAAS;IACT,sBAAsB;AAC1B;;AAEA;IACI,4BAA4B;IAC5B,kBAAkB;IAClB,kBAAkB;AACtB;;AAEA;IACI,4BAA4B;AAChC;;AAEA;IACI,WAAW;IACX,kBAAkB;AACtB;;;AAGA;IACI,WAAW;IACX,kBAAkB;AACtB;;AAEA;IACI,UAAU;IACV,aAAa;IACb,iCAAiC;IACjC,uBAAuB;IACvB,kBAAkB;IAClB,sCAAsC;AAC1C;;AAEA;IACI,kBAAkB;IAClB,8BAA8B;AAClC;;AAEA;IACI,WAAW;IACX,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,kBAAkB;IAClB,4BAA4B;AAChC;AACA,uEAAuE;AACvE,uEAAuE;AACvE,uEAAuE;AACvE;IACI,iBAAiB;IACjB,YAAY;IACZ,kCAAkC;IAClC,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,yBAAyB;IACzB,iBAAiB;IACjB,qBAAqB;IACrB,qBAAqB;AACzB;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,wBAAwB;IACxB,eAAe;AACnB;AACA,uEAAuE;AACvE,uEAAuE;AACvE,uEAAuE;;AAEvE,iDAAiD;AACjD;IACI;QACI,iBAAiB;IACrB;;IAEA;QACI,UAAU;IACd;AACJ;AACA,oEAAoE;AACpE;IACI;QACI,iBAAiB;QACjB,iBAAiB;QACjB,oBAAoB;QACpB,sBAAsB;QACtB,kBAAkB;IACtB;;IAEA;QACI,kBAAkB;IACtB;;IAEA;QACI,UAAU;IACd;AACJ;AACA,qDAAqD;AACrD;IACI;QACI,mBAAmB;QACnB,iBAAiB;QACjB,kBAAkB;QAClB,sBAAsB;QACtB,kBAAkB;IACtB;;IAEA;QACI,aAAa;IACjB;;IAEA;QACI,UAAU;IACd;AACJ;AACA,mDAAmD;AACnD;IACI;QACI,UAAU;IACd;AACJ;AACA,oEAAoE;AACpE;IACI;QACI,UAAU;IACd;AACJ",sourcesContent:[':root {\n    --ct-dark: darkgrey;\n    --ct-darker: black;\n    --ct-vibrant: gold;\n    --ct-light: lightgrey;\n    --ct-lighter: lightblue;\n    --ct-dark-crystal: rgba(0, 0, 0, 0.75);\n\n    --navbar-height: 3rem;\n    --footer-height: 4rem;\n    /* --navbar-height: 5rem; */\n\n    --fs-navbar: 0.9rem;\n    --fs-logo: 1.2rem;\n    --fs-headers: 1.8rem;\n    --fs-subheader: 1.4rem;\n    --fs-content: 0.9rem;\n}\n\n* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    font-family: \'Segoe UI\', Tahoma, Geneva, Verdana, sans-serif\n}\n\n.content {\n    display: grid;\n    grid-template: var(--navbar-height) 1fr var(--footer-height) / 1fr;\n    grid-template-areas:\n        "nav-bar"\n        "main-content"\n        "footer";\n}\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\nnav {\n    grid-area: nav-bar;\n    position: sticky;\n    top: 0;\n    background-color: var(--ct-darker);\n    color: var(--ct-light);\n    font-size: var(--fs-navbar);\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n}\n\nnav > .logo {\n    font-size: var(--fs-logo);\n    color: var(--ct-vibrant);\n    font-weight: bolder;\n}\n\nnav > ul {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    list-style: none;\n    font-weight: bold;\n}\n\nnav > ul > li:hover {\n    color: var(--ct-vibrant);\n    cursor: pointer;\n}\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\n.main-content {\n    grid-area: main-content;\n    background-color: var(--ct-lighter);\n    min-height: 100vh;\n    padding: 1rem;\n    background: no-repeat center\n        url("./assets/pexels-valeria-boltneva-1639565.jpg");\n    background-size: cover;\n    display: flex;\n    justify-content: center;\n}\n\n.content-frame {\n    width: 60%;\n    height: fit-content;\n    background-color: var(--ct-dark-crystal);\n    box-shadow: 0 0 2px 2px var(--ct-dark-crystal);\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: flex-start;\n    padding: 1rem;\n    gap: 1rem;\n    color: var(--ct-light);\n}\n\n.content-frame > h1 {\n    font-size: var(--fs-headers);\n    text-align: center;\n    font-style: italic;\n}\n\n.content-frame > p {\n    font-size: var(--fs-content);\n}\n\n.content-frame > img {\n    width: 100%;\n    border-radius: 3px;\n}\n\n\n.content-frame > video {\n    width: 100%;\n    border-radius: 3px;\n}\n\n.content-frame > .menu-item-container {\n    width: 90%;\n    padding: 1rem;\n    background-color: var(--ct-light);\n    color: var(--ct-darker);\n    border-radius: 3px;\n    box-shadow: 0 0 1px 1px var(--ct-dark);\n}\n\n.content-frame > .menu-item-container > .menu-item-name {\n    text-align: center;\n    font-size: var(--fs-subheader);\n}\n\n.content-frame > .menu-item-container > img {\n    width: 100%;\n    margin: 1rem 0;\n}\n\n.content-frame > .menu-item-container > .menu-item-desc {\n    text-align: center;\n    font-style: italic;\n    font-size: var(--fs-content);\n}\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\nfooter {\n    grid-area: footer;\n    height: 100%;\n    background-color: var(--ct-darker);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\nfooter > .githubLink {\n    font-size: var(--fs-logo);\n    font-weight: bold;\n    color: var(--ct-dark);\n    text-decoration: none;\n}\n\nfooter > .githubLink > a > img {\n    height: var(--fs-subheader);\n}\n\nfooter > .githubLink:hover {\n    color: var(--ct-vibrant);\n    cursor: pointer;\n}\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\n/* //--------------------------------------------------------------// */\n\n/* Extra small devices (phones, 600px and down) */\n@media only screen and (max-width: 600px) {\n    .main-content {\n        padding: 1rem 5px;\n    }\n\n    .content-frame {\n        width: 95%;\n    }\n}\n/* Small devices (portrait tablets and large phones, 600px and up) */\n@media only screen and (min-width: 600px) {\n    :root {\n        --fs-navbar: 1rem;\n        --fs-logo: 1.4rem;\n        --fs-headers: 1.9rem;\n        --fs-subheader: 1.5rem;\n        --fs-content: 1rem;\n    }\n\n    .main-content {\n        padding: 1rem 10px;\n    }\n\n    .content-frame {\n        width: 90%;\n    }\n}\n/* Medium devices (landscape tablets, 768px and up) */\n@media only screen and (min-width: 768px) {\n    :root {\n        --fs-navbar: 1.1rem;\n        --fs-logo: 1.6rem;\n        --fs-headers: 2rem;\n        --fs-subheader: 1.6rem;\n        --fs-content: 1rem;\n    }\n\n    .main-content {\n        padding: 1rem;\n    }\n    \n    .content-frame {\n        width: 80%;\n    }\n}\n/* Large devices (laptops/desktops, 992px and up) */\n@media only screen and (min-width: 992px) {  \n    .content-frame {\n        width: 70%;\n    }\n}\n/* Extra large devices (large laptops and desktops, 1200px and up) */\n@media only screen and (min-width: 1200px) {  \n    .content-frame {\n        width: 50%;\n    }\n}\n'],sourceRoot:""}]);const m=A},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,r,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(a)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var A=[].concat(n[d]);a&&i[A[0]]||(void 0!==o&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=o),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),e.push(A))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),o="/*# ".concat(r," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var o={},i=[],c=0;c<n.length;c++){var s=n[c],d=a.base?s[0]+a.base:s[0],A=o[d]||0,l="".concat(d," ").concat(A);o[d]=A+1;var m=t(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==m)e[m].references++,e[m].updater(u);else{var p=r(u,a);a.byIndex=c,e.splice(c,0,{identifier:l,updater:p,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var o=a(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var c=t(o[i]);e[c].references--}for(var s=a(n,r),d=0;d<o.length;d++){var A=t(o[d]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}o=s}}},569:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,r&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},814:(n,e,t)=>{n.exports=t.p+"d9a63e736e9c75db7400.jpg"}},e={};function t(a){var r=e[a];if(void 0!==r)return r.exports;var o=e[a]={id:a,exports:{}};return n[a](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var a=e.getElementsByTagName("script");if(a.length)for(var r=a.length-1;r>-1&&!n;)n=a[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),a=t(795),r=t.n(a),o=t(569),i=t.n(o),c=t(565),s=t.n(c),d=t(216),A=t.n(d),l=t(589),m=t.n(l),u=t(426),p={};p.styleTagTransform=m(),p.setAttributes=s(),p.insert=i().bind(null,"head"),p.domAPI=r(),p.insertStyleElement=A(),e()(u.Z,p),u.Z&&u.Z.locals&&u.Z.locals;const h=t.p+"b0dc7800ebdc7f353e3d.svg";function f(n){const e=document.createElement("li");return e.setAttribute("id",n.slice(0,4).toLowerCase()),e.innerHTML+=n,e}const C=t.p+"727662098a83c7fb06c0.jpg",g=t.p+"13ea56dce0d3745c9dd1.mp4";function B(){const n=document.createElement("div");n.classList.add("content-frame"),n.setAttribute("id","content-frame");const e=document.createElement("h1");e.textContent="Welcome to FatMates!";const t=document.createElement("p");t.textContent="G’day! Welcome to our fast food joint! We’ve got all the classics like burgers, fries, and shakes, as well as some healthier options like salads and wraps. Our food is fresh and made to order, so you can be sure you’re getting the best quality every time.";const a=new Image;a.src=C;const r=document.createElement("p");r.textContent="Whether you’re in a rush or looking for a place to chill with your mates, we’ve got you covered.";const o=document.createElement("video");o.src=g,o.autoplay=!0,o.loop=!0;const i=document.createElement("p");return i.textContent="Come check us out and see why we’re one of the best fast food spots around!",n.appendChild(e),n.appendChild(t),n.appendChild(a),n.appendChild(r),n.appendChild(o),n.appendChild(i),n}const v=t.p+"e2ad19d06158e5fb951f.jpg",b=t.p+"f259166a885d5967bc8f.jpg",I=t.p+"7c55601df8e8e62b7fd8.jpg",y=t.p+"d59ccf0c8c7d22c4c7cf.jpg",E=t.p+"45b9c97ab8cb41557ac1.jpg";class x{constructor(n,e,t,a){this._name=n,this._img_url=e,this._desc=t,this._type=a}get name(){return this._name}get img_url(){return this._img_url}get desc(){return this._desc}get type(){return this._type}}function k(n){const e=document.createElement("div");e.classList.add("menu-item-container");const t=document.createElement("h1");t.classList.add("menu-item-name"),t.textContent=n.name,e.appendChild(t);const a=new Image;a.src=n.img_url,e.appendChild(a);const r=document.createElement("p");return r.classList.add("menu-item-desc"),r.textContent=n.desc,e.appendChild(r),e}function w(n,e,t){const a=document.createElement("li"),r=document.createElement("input");return r.type=e,r.id=n,r.name="customer_"+n,r.placeholder=t,a.appendChild(r),a}const L=n=>{try{document.getElementById("content-frame").remove()}catch(n){console.log(n),console.log("No CONTENT-FRAME element")}switch(n.target.id){case"welc":document.getElementById("main-content").appendChild(B());break;case"menu":document.getElementById("main-content").appendChild(function(){const n=document.createElement("div");n.classList.add("content-frame"),n.setAttribute("id","content-frame");const e=document.createElement("h1");e.classList.add("menu-section"),e.textContent="Burgers";const t=new x("Kangaroo Burger",v,"Our kangaroo burger is a succulent and savory treat made with lean and tender kangaroo meat, sourced from the wild and natural Australian outback. Enjoy the rich and distinctive flavor of kangaroo, paired with fresh lettuce, tomato, cheese, and your choice of sauce. A kangaroo burger is a healthy and eco-friendly alternative to beef, with less fat, more protein, and lower greenhouse gas emissions. Try one today and experience a true Aussie delicacy.","burger"),a=new x("Beef Burger",b,"Classic and satisfying dish that features a juicy and flavourful patty made from ground beef, sandwiched between two soft buns. You can customize your beef burger with various toppings and sauces, such as cheese, lettuce, tomato, onion, bacon, ketchup, mustard, mayonnaise, and more.","burger"),r=new x("Crispy Chicken",I,"Tasty and healthy alternative to a beef burger, that features a tender and crispy patty made from chicken breast, coated with breadcrumbs and spices, and fried or baked to perfection.","burger"),o=document.createElement("h1");o.classList.add("menu-section"),o.textContent="Pizza";const i=new x("Margherita",y,"Margherita pizza is a simple and delicious pizza that features a thin and crispy crust, topped with tomato sauce, fresh mozzarella cheese, and basil leaves.","pizza"),c=new x("Meat Lovers",E,"This pizza is loaded with pepperoni, ham, bacon, sausage, and beef, along with mozzarella cheese and tomato sauce. It is a classic option for meat enthusiasts who want to try a bit of everything.","pizza");return n.appendChild(e),n.appendChild(k(t)),n.appendChild(k(a)),n.appendChild(k(r)),n.appendChild(o),n.appendChild(k(i)),n.appendChild(k(c)),n}());break;case"cont":document.getElementById("main-content").appendChild(function(){const n=document.createElement("div");n.classList.add("content-frame"),n.setAttribute("id","content-frame");const e=document.createElement("h1");e.textContent="Contact Us";const t=document.createElement("h2");e.textContent="How to get in touch?",document.createElement("p").textContent="If you have any questions, feedback, or suggestions, we’d love to hear from you. You can contact us by phone, email, or social media.";const a=document.createElement("form");a.id="contact_form";const r=document.createElement("ul");r.appendChild(w("name","text","Your Name")),r.appendChild(w("email","email","Your Email")),r.appendChild(w("subject","text","Subject")),r.appendChild(function(n,e){const t=document.createElement("li"),a=document.createElement("textarea");return a.id="msg",a.name="customer_msg",a.placeholder="Message",t.appendChild(a),t}()),a.appendChild(r);const o=document.createElement("button");o.setAttribute("form","contact_form"),o.type="submit",o.value="Submit",o.innerText="BOOK A TABLE";const i=document.createElement("h3");i.classList.add("contact-header"),i.textContent="address";const c=document.createElement("p");c.classList.add("contact-value"),c.textContent="123 Fifth Avenue, Melbourne, VIC 3000";const s=document.createElement("h3");s.classList.add("contact-header"),s.textContent="phone number";const d=document.createElement("p");d.classList.add("contact-value"),d.textContent="+64 0419 FAT MATES";const A=document.createElement("h3");A.classList.add("contact-header"),A.textContent="email address";const l=document.createElement("p");l.classList.add("contact-value"),l.textContent="contact@fatmates.com.au";const m=document.createElement("h3");m.classList.add("contact-header"),m.textContent="follow us";const u=document.createElement("p");return u.classList.add("contact-value"),u.textContent="--------- ICONS --------",n.appendChild(e),n.appendChild(t),n.appendChild(a),n.appendChild(o),n.appendChild(i),n.appendChild(c),n.appendChild(s),n.appendChild(d),n.appendChild(A),n.appendChild(l),n.appendChild(m),n.appendChild(u),n}())}};(function(){const n=document.createElement("div");n.classList.add("content"),document.body.appendChild(n),n.appendChild(function(){const n=document.createElement("nav"),e=document.createElement("div");e.classList.add("logo"),e.textContent="FatMates!",n.appendChild(e);const t=document.createElement("ul");n.appendChild(t);const a=["Welcome","Menu","Contact us"];for(let n=0;n<a.length;n++)t.appendChild(f(a[n]));return n}()),n.appendChild(function(){const n=document.createElement("div");return n.classList.add("main-content"),n.setAttribute("id","main-content"),n}()),n.appendChild(function(){const n=document.createElement("footer"),e=document.createElement("a");return e.setAttribute("href","https://github.com/nico9506/TOP-restaurant-page"),e.setAttribute("target","_blank"),e.classList.add("githubLink"),e.innerHTML=`<a><img src=${h}></img> nico9506</a>`,n.appendChild(e),n}())})(),(()=>{const n=document.getElementById("welc"),e=document.getElementById("menu"),t=document.getElementById("cont");n.addEventListener("click",L),e.addEventListener("click",L),t.addEventListener("click",L)})(),document.getElementById("main-content").appendChild(B())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,